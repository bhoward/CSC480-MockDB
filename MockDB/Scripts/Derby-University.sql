-- drop the tables
DROP TABLE enroll;
DROP TABLE SECTION;
DROP TABLE course;
DROP TABLE student;
DROP TABLE dept;

-- create the tables
create table DEPT (
  DId int not null,
  DName varchar(25) not null,
  primary key (DId)
);

create table STUDENT (
  SId int not null,
  SName varchar(25) not null,
  GradYear int,
  MajorId int,
  primary key (SId),
  foreign key (MajorId) references DEPT
    on update no action
    on delete set null,
  check (SId > 0),
  check (GradYear >= 1863)
);

create table COURSE (
  CId int not null,
  Title varchar(50) not null,
  DeptId int,
  primary key (CId),
  foreign key (DeptId) references DEPT
    on update no action
    on delete set null
);

create table SECTION (
  SectId int not null,
  CourseId int,
  Prof varchar(25),
  YearOffered int,
  primary key (SectId),
  foreign key (CourseId) references COURSE
    on update no action
    on delete cascade
);

create table ENROLL (
  EId int not null,
  StudentId int,
  SectionId int,
  Grade varchar(2),
  primary key (EId),
  foreign key (StudentId) references STUDENT
    on update no action
    on delete cascade,
  foreign key (SectionId) references SECTION
    on update no action
    on delete cascade
);

-- clear the tables
DELETE FROM enroll;
DELETE FROM SECTION;
DELETE FROM course;
DELETE FROM student;
DELETE FROM dept;

-- insert the simple data from Sciore
insert into DEPT (DId, DName)
VALUES
  (10, 'compsci'), (20, 'math'), (30, 'drama');

insert into STUDENT (SId, SName, GradYear, MajorId)
VALUES
  (1, 'joe', 2004, 10), (2, 'amy', 2004, 20), (3, 'max', 2005, 10),
  (4, 'sue', 2005, 20), (5, 'bob', 2003, 30), (6, 'kim', 2001, 20),
  (7, 'art', 2004, 30), (8, 'pat', 2001, 20), (9, 'lee', 2004, 10);

insert into COURSE (CId, Title, DeptId)
VALUES
  (12, 'db systems', 10), (22, 'compilers', 10), (32, 'calculus', 20),
  (42, 'algebra', 20), (52, 'acting', 30), (62, 'elocution', 30);

insert into SECTION (SectId, CourseId, Prof, YearOffered)
VALUES
  (13, 12, 'turing', 2004), (23, 12, 'turing', 2005),
  (33, 32, 'newton', 2000), (43, 32, 'einstein', 2001),
  (53, 62, 'brando', 2001);

insert into ENROLL (EId, StudentId, SectionId, Grade)
VALUES
  (14, 1, 13, 'A'), (24, 1, 43, 'C'), (34, 2, 43, 'B+'),
  (44, 4, 33, 'B'), (54, 4, 53, 'A'), (64, 6, 53, 'A');

-- insert data generated by MockDB
CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE (null, 'DEPT', '/tmp/department.csv', null, null,  null, 0);
CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE (null, 'STUDENT', '/tmp/student.csv', null, null,  null, 0);
CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE (null, 'COURSE', '/tmp/course.csv', null, null,  null, 0);
CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE (null, 'SECTION', '/tmp/section.csv', null, null,  null, 0);
CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE (null, 'ENROLL', '/tmp/enroll.csv', null, null,  null, 0);

-- drop the views
DROP VIEW QQ;
DROP VIEW QN;
DROP VIEW QH;
DROP VIEW QE;
DROP VIEW QC;
DROP VIEW QB;
DROP VIEW QA;

-- run some queries from Sciore
CREATE VIEW QA (SectionId, SectSize) AS
SELECT e.SectionId, Count(*) FROM ENROLL e GROUP BY e.SectionId;

CREATE VIEW QB (YearOffered, AvgSectSize) AS
SELECT s.YearOffered, Avg(a.SectSize) FROM SECTION s, QA a WHERE s.SectId=a.SectionId GROUP BY s.YearOffered;

CREATE VIEW QC (SectId, CourseId, YearOffered) AS
SELECT s.SectId, s.CourseId, s.YearOffered FROM SECTION s, qa a, qb b
WHERE s.SectId=a.SectionId AND s.YearOffered=b.YearOffered AND a.SectSize > b.AvgSectSize;

CREATE VIEW QE (YearOffered) AS
SELECT b.YearOffered FROM QB b WHERE b.AvgSectSize=(SELECT Max(AvgSectSize) FROM QB);

CREATE VIEW QH (Prof) AS 
SELECT s.Prof FROM SECTION s GROUP BY s.Prof HAVING Max(s.YearOffered) - Min(s.YearOffered) >= 20;

CREATE VIEW QN (SId, SName, MajorId, GradYear) AS
SELECT s.SId, s.SName, s.MajorId, s.GradYear FROM STUDENT s, DEPT d
WHERE s.MajorId=d.DId AND d.DName='Theatre' AND s.SId NOT IN (
SELECT e.StudentId FROM ENROLL e, SECTION k, COURSE c, DEPT d2
WHERE e.SectionId=k.SectId AND k.CourseId=c.CId AND c.DeptId=d2.DId AND d2.DName='Mathematics');

CREATE VIEW QQ (SId, SName, MajorId, GradYear) AS 
SELECT s.SId, s.SName, s.MajorId, s.GradYear FROM STUDENT s
WHERE s.SID NOT IN (
SELECT s2.SId FROM STUDENT s2, ENROLL e, SECTION k, course c
WHERE s2.SId=e.StudentId AND e.SectionId=k.SectId AND k.CourseId=c.CId AND c.DeptId=s2.MajorId AND e.Grade='A');
